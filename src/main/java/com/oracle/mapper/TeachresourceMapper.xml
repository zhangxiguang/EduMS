<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.mapper.TeachresourceMapper">
  <resultMap id="BaseResultMap" type="com.oracle.entity.Teachresource">
    <id column="resID" jdbcType="INTEGER" property="resid" />
    <result column="couID" jdbcType="INTEGER" property="couid" />
    <result column="upTime" jdbcType="VARCHAR" property="uptime" />
    <result column="resName" jdbcType="VARCHAR" property="resname" />
    <result column="resType" jdbcType="VARCHAR" property="restype" />
    <result column="resSize" jdbcType="INTEGER" property="ressize" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resID, couID, upTime, resName, resType, resSize
  </sql>
  <select id="selectByExample" parameterType="com.oracle.entity.TeachresourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teachresource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teachresource
    where resID = #{resid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teachresource
    where resID = #{resid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oracle.entity.TeachresourceExample">
    delete from teachresource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oracle.entity.Teachresource">
    insert into teachresource (resID, couID, upTime, 
      resName, resType, resSize
      )
    values (#{resid,jdbcType=INTEGER}, #{couid,jdbcType=INTEGER}, #{uptime,jdbcType=VARCHAR}, 
      #{resname,jdbcType=VARCHAR}, #{restype,jdbcType=VARCHAR}, #{ressize,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.oracle.entity.Teachresource">
    insert into teachresource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resid != null">
        resID,
      </if>
      <if test="couid != null">
        couID,
      </if>
      <if test="uptime != null">
        upTime,
      </if>
      <if test="resname != null">
        resName,
      </if>
      <if test="restype != null">
        resType,
      </if>
      <if test="ressize != null">
        resSize,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resid != null">
        #{resid,jdbcType=INTEGER},
      </if>
      <if test="couid != null">
        #{couid,jdbcType=INTEGER},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=VARCHAR},
      </if>
      <if test="resname != null">
        #{resname,jdbcType=VARCHAR},
      </if>
      <if test="restype != null">
        #{restype,jdbcType=VARCHAR},
      </if>
      <if test="ressize != null">
        #{ressize,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oracle.entity.TeachresourceExample" resultType="java.lang.Long">
    select count(*) from teachresource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teachresource
    <set>
      <if test="record.resid != null">
        resID = #{record.resid,jdbcType=INTEGER},
      </if>
      <if test="record.couid != null">
        couID = #{record.couid,jdbcType=INTEGER},
      </if>
      <if test="record.uptime != null">
        upTime = #{record.uptime,jdbcType=VARCHAR},
      </if>
      <if test="record.resname != null">
        resName = #{record.resname,jdbcType=VARCHAR},
      </if>
      <if test="record.restype != null">
        resType = #{record.restype,jdbcType=VARCHAR},
      </if>
      <if test="record.ressize != null">
        resSize = #{record.ressize,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teachresource
    set resID = #{record.resid,jdbcType=INTEGER},
      couID = #{record.couid,jdbcType=INTEGER},
      upTime = #{record.uptime,jdbcType=VARCHAR},
      resName = #{record.resname,jdbcType=VARCHAR},
      resType = #{record.restype,jdbcType=VARCHAR},
      resSize = #{record.ressize,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oracle.entity.Teachresource">
    update teachresource
    <set>
      <if test="couid != null">
        couID = #{couid,jdbcType=INTEGER},
      </if>
      <if test="uptime != null">
        upTime = #{uptime,jdbcType=VARCHAR},
      </if>
      <if test="resname != null">
        resName = #{resname,jdbcType=VARCHAR},
      </if>
      <if test="restype != null">
        resType = #{restype,jdbcType=VARCHAR},
      </if>
      <if test="ressize != null">
        resSize = #{ressize,jdbcType=INTEGER},
      </if>
    </set>
    where resID = #{resid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oracle.entity.Teachresource">
    update teachresource
    set couID = #{couid,jdbcType=INTEGER},
      upTime = #{uptime,jdbcType=VARCHAR},
      resName = #{resname,jdbcType=VARCHAR},
      resType = #{restype,jdbcType=VARCHAR},
      resSize = #{ressize,jdbcType=INTEGER}
    where resID = #{resid,jdbcType=INTEGER}
  </update>
</mapper>